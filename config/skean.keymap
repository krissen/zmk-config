/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
	quick_tap_ms = <200>;
	tapping-term-ms = <500>;
	};
&mt { 
	quick_tap_ms = <200>;
	tapping-term-ms = <500>;
	};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI/ESC 	|   <  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        	| CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        	| LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
   &mt LWIN ESC &kp GRAVE	&kp Q &kp W &kp F &kp P &kp G         &kp J &kp L &kp U     &kp Y   &kp SEMI &kp LBKT      &mt RWIN RBKT
            &mt LCTRL LA(N4) 	&kp A &kp R &kp S &kp T &kp D         &kp H &kp N &kp E     &kp I   &kp O    &mt RCTRL SQT
            &mt LALT LA(N2)	&kp Z &kp X &kp C &kp V &kp B         &kp K &kp M &kp COMMA &kp DOT &kp FSLH &mt RALT BSLH
		&lt RSE BSPC &mt LSHFT SPACE &lt LWR TAB		&lt LWR RET &mt RSHFT SPACE &lt RSE DEL
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp NON_US_BACKSLASH &kp F1   &kp F2 &kp F3   &kp F4   &kp F5           		&kp F6	  &kp F7   &kp F8   &kp F9   &kp F10  &kp F11 &mt RGUI F12
          &mt LCTRL LA(LS(N8)) &kp LA(N8) &kp LA(N9) &kp LA(LS(N9)) &kp LA(N7) &kp LA(LS(N7)) 	&kp LS(N7) &kp LS(MINUS) &kp RS(BSLH) &kp RS(N8) &kp RS(N9) &mt RCTRL MINUS
          &mt LALT EQUAL &kp N1   &kp N2 &kp N3   &kp N4  &kp N5           			&kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &mt RALT RS(EQUAL)
                                              &lt ADJ BSPC &trans &trans   &trans &trans &lt ADJ DEL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &kp ESC  &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS	  	&kp C_VOL_UP &kp HOME &kp UP	&kp PG_UP &kp RG(X) &kp RS(RG(V)) &mt RCMD LA(RBKT)
          &mt LCTRL KP_EQUAL &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS	&kp C_MUTE   &kp LEFT &kp DOWN  &kp RIGHT &kp RG(C) &mt RCTRL LS(N2)
          &mt LALT DOT  &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT	&kp C_VOL_DN &kp END  &kp PSCRN &kp PG_DN &kp RG(V) &mt RALT RS(EQUAL)
                                                           &trans &trans &lt ADJ RET   	&lt ADJ ESC &trans &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &kp PAUSE_BREAK      &kp INS      &kp SLCK     &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 	&bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &kp LNLCK        	&none        &kp CAPS        &none         &kp K_APP
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
